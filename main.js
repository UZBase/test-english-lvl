const TelegramBot = require('node-telegram-bot-api');
const token = '2102216686:AAF4Y3hwMGcBoAARfvhNscI7Fh_Gg0O3vLE';
const bot = new TelegramBot(token, { polling: true });
const start = () => {
    bot.on("message", async (message) => {
        const { chat, message_id } = message;
        const chatId = message.chat.id;
        const name = message.from.first_name;
        const text = message.text;
        const lastname = message.from.last_name;
        const id = message.from.id;
        const username = message.from.username;
        if (text == "/info" || text == "/info@beta_tests_bot") {
            bot.getUserProfilePhotos(id, 0, 1).then(function (data) {
                bot.sendPhoto(
                    chatId,
                    data.photos[0][0].file_id,
                    {
                        caption: `–í–∞—à–µ –∏–º—è : ${name}\n–í–∞—à–µ —Ñ–∞–º–∏–ª–∏—è : ${lastname}\n–í–∞—à ID : ${id}\n –í–∞—à user : @${username}\n`,
                        // –ü—Ä–æ—à—ë–ª —Ç–µ—Å—Ç  : ${count} —Ä–∞–∑–∞\n –í–∞—à —É—Ä–æ–≤–µ–Ω –ê–Ω–≥–ª. —è–∑ : ${lvl}
                    },
                    {
                        reply_to_message_id: message_id,
                    }
                );
            });
        }
        else if (
            text == "/start" ||
            text == "start" ||
            text == "–Ω–∞—á–∞—Ç—å" ||
            text == "/start@Your_diary_Robot"
        ) {
            bot.sendMessage(
                chatId,
                `–ü—Ä–∏–≤–µ—Ç <b>${name}</b>! üòä



–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ üß†. –í —Ç–µ—Å—Ç–µ –≤—Å–µ–≥–æ 20 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ä–∞–∑–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, —Ç—ã —Å–º–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏ –µ–≥–æ –∑–∞ 3-5 –º–∏–Ω—É—Ç. 

–í–æ –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫. –£ —Ç–µ–±—è –±—É–¥–µ—Ç –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–æ–ø—Ä–æ—Å. 

–≠—Ç–æ –Ω–µ —à–∫–æ–ª—å–Ω–∞—è –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è, –ø–æ—ç—Ç–æ–º—É –Ω–µ –±–æ–π—Å—è –æ—Ç–≤–µ—á–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ¬´–Ø –Ω–µ –∑–Ω–∞—é¬ª. –£–¥–∞—á–∏!üòá
                
                `,
                {
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `–î–∞, –≥–æ—Ç–æ–≤—å.`,
                                    callback_data: `–î–∞, –≥–æ—Ç–æ–≤—å.`,
                                },
                            ],
                            [
                                {
                                    text: `–ù–µ—Ç, —è –Ω–µ –∑–Ω–∞—é.`,
                                    callback_data: `–ù–µ—Ç, —è –Ω–µ –∑–Ω–∞—é.`,
                                },
                            ],
                        ],
                    },
                }
            );
        }
    }
    )
    bot.on("callback_query", async (query) => {
        const { chat, message_id, text } = query.message;
        switch (query.data) {
            case "–ù–µ—Ç, —è –Ω–µ –∑–Ω–∞—é.":
                bot.deleteMessage(chat.id, message_id);
                bot.sendMessage(chat.id, `
                –¢—ã —É–≤–µ—Ä–µ–Ω—å —á—Ç–æ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å ? –ú–æ–∂–µ—Ç –≤—Å—ë —Ç–∞–∫–∏ –ø–æ–ø—Ä–æ–±—É–µ—à—å ?`, {
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å",
                                    callback_data: "–î–∞, –≥–æ—Ç–æ–≤—å.",
                                },
                            ],
                        ],
                    },
                })
                break
            case "–î–∞, –≥–æ—Ç–æ–≤—å.":
                bot.deleteMessage(chat.id, message_id);
                bot.sendMessage(chat.id, `1. He advised me ‚Ä¶ the heavy furniture.`, {
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "not to lift",
                                    callback_data: "not to lift",
                                },
                            ],
                            [
                                {
                                    text: "isn't lift",
                                    callback_data: "isn't lift",
                                },
                            ],
                            [
                                {
                                    text: "to not lift",
                                    callback_data: "to not lift",
                                },
                            ],
                            [
                                {
                                    text: "–ù–µ –∑–Ω–∞—é",
                                    callback_data: "–ù–µ –∑–Ω–∞—é",
                                },
                            ]
                        ],
                    },
                });
                break
            case "not to lift" && "isn't lift" && "to not lift":
                bot.deleteMessage(chat.id, message_id)
                bot.sendMessage(chat.id, `2. My brother says he'll never forget ‚Ä¶ the Niagara Falls for the first time.`, {
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "he saw",
                                    callback_data: "not to lift",
                                },
                            ],
                            [
                                {
                                    text: "to see",
                                    callback_data: "isn't lift",
                                },
                            ],
                            [
                                {
                                    text: "seeing",
                                    callback_data: "seeing",
                                },
                            ],
                        ],
                    },
                });
                break
            case "he saw" && "to see" && "seeing":
                bot.deleteMessage(chat.id, message_id)
                bot.sendMessage(chat.id, `3. She says that when she was a child bananas ‚Ä¶ her least favorite fruit.`, {
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "have been",
                                    callback_data: "have been",
                                },
                            ],
                            [
                                {
                                    text: "are",
                                    callback_data: "are",
                                },
                            ],
                            [
                                {
                                    text: "were",
                                    callback_data: "were",
                                },
                            ],
                        ],
                    },
                });
                break
            case "have been" && "are" && "were":
                bot.deleteMessage(chat.id, message_id)
                bot.sendMessage(chat.id, `4. Rita wanted to change her hairstyle, so she ‚Ä¶ by a professional stylist.`, {
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "had cut it",
                                    callback_data: "had cut it",
                                },
                            ],
                            [
                                {
                                    text: "had it cut",
                                    callback_data: "had it cut",
                                },
                            ],
                            [
                                {
                                    text: "have to cut it",
                                    callback_data: "have to cut it",
                                },
                            ],
                        ],
                    },
                });
                break
            case "had cut it" && "had it cut" && "have to cut it":
                bot.deleteMessage(chat.id, message_id)
                bot.sendMessage(chat.id, `5. Mr. Halls reads ‚Ä¶ than anyone I know.`, {
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "faster",
                                    callback_data: "faster",
                                },
                            ],
                            [
                                {
                                    text: "fastly",
                                    callback_data: "fastly",
                                },
                            ],
                            [
                                {
                                    text: "more fast",
                                    callback_data: "more fast",
                                },
                            ],
                        ],
                    },
                });
                break
            case "faster" & "fastly" & "more fast":
                bot.deleteMessage(chat.id, message_id)
                bot.sendMessage(chat.id, `6. Neither my mom ‚Ä¶ me have ever been to Rome.`, {
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "but",
                                    callback_data: "but",
                                },
                            ],
                            [
                                {
                                    text: "or",
                                    callback_data: "or",
                                },
                            ],
                            [
                                {
                                    text: "nor",
                                    callback_data: "nor",
                                },
                            ],
                        ],
                    },
                });
                break
            case "but" & "or" & "nor":
                bot.deleteMessage(chat.id, message_id)
                bot.sendMessage(chat.id, `7. What time does the bus ‚Ä¶ London?`, {
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "arrive",
                                    callback_data: "arrive",
                                },
                            ],
                            [
                                {
                                    text: "comes",
                                    callback_data: "comes",
                                },
                            ],
                            [
                                {
                                    text: "reach",
                                    callback_data: "reach",
                                },
                            ],
                        ],
                    },
                });
                break
        }
    });
}
start();